# coding: utf-8

"""
    OpenAlex

    ![](https://raw.githubusercontent.com/ourresearch/openalex-docs/main/.gitbook/assets/OpenAlex-logo-5.png)  **OpenAlex** is a fully open catalog of the global research system.  It's named after the [ancient Library of Alexandria](https://en.wikipedia.org/wiki/Library_of_Alexandria) and made by the nonprofit [OurResearch](https://ourresearch.org/).  ## OpenAPI Specification  [Mearman/openalex-api-spec](https://github.com/Mearman/openalex-api-spec)  This OpenAPI specification is reverse-engineered and derived from spec generated by [openapi-devtools](https://github.com/AndrewWalsh/openapi-devtools).  The specification document itself is OpenAPI version 3.1 and is generated from TypeScript source code.  [![Open in](https://img.shields.io/badge/Open%20in-Swagger%20UI-85EA2D?style=for-the-badge&logo=Swagger&link=https://mearman.github.io/openalex-swagger-ui-react/)](https://mearman.github.io/openalex-swagger-ui-react/)  **[Releases](https://github.com/Mearman/openalex-api-spec/releases)**  ## Clients  [![TypeScript](https://img.shields.io/badge/TypeScript-3178C6?style=for-the-badge&logo=TypeScript&logoColor=white&link=https://github.com/Mearman/openalex-typescript)](https://github.com/Mearman/openalex-typescript)  [![TypeScript Fetch](https://img.shields.io/badge/TypeScript%20Fetch-3178C6?style=for-the-badge&logo=TypeScript&logoColor=white&link=https://github.com/Mearman/openalex-typescript-fetch)](https://github.com/Mearman/openalex-typescript-fetch)  [![TypeScript Node](https://img.shields.io/badge/TypeScript%20Node-339933?style=for-the-badge&logo=Node.js&logoColor=white&link=https://github.com/Mearman/openalex-typescript-node)](https://github.com/Mearman/openalex-typescript-node)  [![Python](https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=Python&logoColor=white&link=https://github.com/Mearman/openalex-python)](https://github.com/Mearman/openalex-python) [![Open in](https://img.shields.io/badge/Open%20in-CodeSpaces-181717?style=for-the-badge&logo=GitHub&link=https://codespaces.new/Mearman/openalex-python)](https://codespaces.new/Mearman/openalex-python) [![Open in](https://img.shields.io/badge/Open%20in-Colab-F9AB00?style=for-the-badge&logo=Google%20Colab&link=https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)](https://colab.research.google.com/github/Mearman/openalex-python/blob/main/README.ipynb)  ---

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openalex_api_pydantic_v1.models.author import Author  # noqa: E501

class TestAuthor(unittest.TestCase):
    """Author unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Author:
        """Test Author
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Author`
        """
        model = Author()  # noqa: E501
        if include_optional:
            return Author(
                affiliations = None,
                cited_by_count = None,
                counts_by_year = None,
                created_date = None,
                display_name = None,
                display_name_alternatives = None,
                id = None,
                ids = openalex_api_pydantic_v1.models.ids.ids(
                    crossref = null, 
                    doi = null, 
                    fatcat = null, 
                    grid = null, 
                    issn = null, 
                    issn_l = null, 
                    mag = null, 
                    openalex = null, 
                    orcid = null, 
                    pmcid = null, 
                    pmid = null, 
                    ror = null, 
                    scopus = null, 
                    wikidata = null, 
                    wikipedia = null, ),
                last_known_institution = openalex_api_pydantic_v1.models.dehydrated_institution.dehydratedInstitution(
                    country_code = null, 
                    display_name = null, 
                    id = null, 
                    lineage = null, 
                    ror = null, 
                    type = null, ),
                last_known_institutions = None,
                orcid = None,
                summary_stats = openalex_api_pydantic_v1.models.summary_stats.summary_stats(
                    2yr_mean_citedness = null, 
                    h_index = null, 
                    i10_index = null, ),
                updated_date = None,
                works_api_url = None,
                works_count = None,
                x_concepts = None
            )
        else:
            return Author(
                display_name = None,
                id = None,
        )
        """

    def testAuthor(self):
        """Test Author"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
